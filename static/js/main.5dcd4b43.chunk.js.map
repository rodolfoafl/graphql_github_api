{"version":3,"sources":["components/RepoItem.js","queries/graphql.js","components/Repos.js","App.js","index.js"],"names":["RepoItem","repo","name","owner","createdAt","url","isPrivate","isArchived","pushedAt","primaryLanguage","className","login","format","href","target","rel","FILTER_USER_REPOS","gql","ORDER_USER_REPOS","Repos","useLazyQuery","filterRepos","loading","error","data","orderRepos","orderLoading","orderError","orderData","useState","repoName","setRepoName","maxResults","setMaxResults","orderMaxResults","setOrderMaxResults","language","setLanguage","setIsPrivate","setIsArchived","sortMethod","setSortMethod","isOrder","setIsOrder","setQueryParameters","query","useEffect","variables","results","orderField","split","orderDirection","number_of_repos","id","htmlFor","type","placeholder","value","onChange","e","Number","defaultValue","disabled","checked","onClick","preventDefault","handleSearchSubmit","handleSortSubmit","message","repositoryOwner","repositories","edges","map","node","count","undefined","search","repositoryCount","from","setResultText","client","ApolloClient","uri","headers","Authorization","Accept","cache","InMemoryCache","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dcd4b43.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst RepoItem = ({\r\n  repo: {\r\n    name,\r\n    owner,\r\n    createdAt,\r\n    url,\r\n    isPrivate,\r\n    isArchived,\r\n    pushedAt,\r\n    primaryLanguage,\r\n  },\r\n}) => {\r\n  return (\r\n    <div className=\"card card-body mb-3 text-light\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9\">\r\n          <h5>Nome: {name}</h5>\r\n          <h5 className=\"mb-4\">Usuário: {owner.login}</h5>\r\n          <h6 className=\"mb-4\">\r\n            Linguagem Principal:{\" \"}\r\n            {primaryLanguage !== null && primaryLanguage.name}\r\n          </h6>\r\n          <h6>\r\n            Criado em: <Moment format=\"DD/MM/YYYY\">{createdAt}</Moment>\r\n          </h6>\r\n          <h6 className=\"mb-4\">\r\n            Atualizado em: <Moment format=\"DD/MM/YYYY\">{pushedAt}</Moment>\r\n          </h6>\r\n          <h6>Arquivado: {isArchived ? \"Sim\" : \"Não\"}</h6>\r\n          <h6>{isPrivate ? \"Privado\" : \"Público\"}</h6>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <a\r\n            href={url}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            GitHub\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepoItem;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const FILTER_USER_REPOS = gql`\r\n  query FilterRepos($query: String!, $number_of_repos: Int!) {\r\n    search(query: $query, type: REPOSITORY, first: $number_of_repos) {\r\n      repositoryCount\r\n      edges {\r\n        node {\r\n          ... on Repository {\r\n            id\r\n            name\r\n            url\r\n            owner {\r\n              login\r\n            }\r\n            isPrivate\r\n            isArchived\r\n            createdAt\r\n            updatedAt\r\n            pushedAt\r\n            primaryLanguage {\r\n              name\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ORDER_USER_REPOS = gql`\r\n  query OrderRepos(\r\n    $login: String!\r\n    $results: Int!\r\n    $orderField: RepositoryOrderField!\r\n    $orderDirection: OrderDirection!\r\n  ) {\r\n    repositoryOwner(login: $login) {\r\n      repositories(\r\n        first: $results\r\n        orderBy: { field: $orderField, direction: $orderDirection }\r\n      ) {\r\n        totalCount\r\n        edges {\r\n          node {\r\n            id\r\n            name\r\n            url\r\n            owner {\r\n              login\r\n            }\r\n            isPrivate\r\n            isArchived\r\n            createdAt\r\n            updatedAt\r\n            pushedAt\r\n            primaryLanguage {\r\n              name\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ORDER_USER_REPOS;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport RepoItem from \"./RepoItem\";\r\n\r\nimport { FILTER_USER_REPOS, ORDER_USER_REPOS } from \"../queries/graphql\";\r\n\r\nconst Repos = () => {\r\n  const [filterRepos, { loading, error, data }] = useLazyQuery(\r\n    FILTER_USER_REPOS\r\n  );\r\n  const [\r\n    orderRepos,\r\n    { loading: orderLoading, error: orderError, data: orderData },\r\n  ] = useLazyQuery(ORDER_USER_REPOS);\r\n\r\n  const [repoName, setRepoName] = useState(\"\");\r\n  // const [userName, setUserName] = useState(\"\");\r\n  const [maxResults, setMaxResults] = useState(5);\r\n  const [orderMaxResults, setOrderMaxResults] = useState(5);\r\n  const [language, setLanguage] = useState(\"\");\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const [isArchived, setIsArchived] = useState(false);\r\n  const [sortMethod, setSortMethod] = useState(\"NAME-ASC\");\r\n  const [isOrder, setIsOrder] = useState(false);\r\n\r\n  const setQueryParameters = () => {\r\n    let query = \"user:rodolfoafl \";\r\n\r\n    // if (userName !== \"\") {\r\n    //   query += `user:${userName} `;\r\n    // }\r\n    if (repoName !== \"\") {\r\n      query += `in:name ${repoName} `;\r\n    }\r\n    if (isPrivate) {\r\n      query += `is:private `;\r\n    }\r\n    if (isArchived) {\r\n      query += `archived:${isArchived} `;\r\n    }\r\n    if (language !== \"\") {\r\n      query += `language:${language} `;\r\n    }\r\n\r\n    return query;\r\n  };\r\n\r\n  const handleSearchSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsOrder(false);\r\n\r\n    let variables = {\r\n      query: setQueryParameters(),\r\n      number_of_repos: maxResults,\r\n    };\r\n\r\n    filterRepos({ variables: variables });\r\n  };\r\n\r\n  const handleSortSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsOrder(true);\r\n\r\n    let variables = {\r\n      login: \"rodolfoafl\",\r\n      results: orderMaxResults,\r\n      orderField: sortMethod.split(\"-\")[0],\r\n      orderDirection: sortMethod.split(\"-\")[1],\r\n    };\r\n\r\n    orderRepos({ variables: variables });\r\n  };\r\n\r\n  const setResultText = (data) => {\r\n    let count = 0;\r\n    if (data) {\r\n      if (data.search !== undefined) {\r\n        count = data.search.repositoryCount;\r\n      }\r\n      if (count > 0) {\r\n        let from = count;\r\n        let current;\r\n        if (maxResults >= count) {\r\n          current = count;\r\n        } else {\r\n          current = maxResults;\r\n        }\r\n\r\n        return `Mostrando ${current} de ${from}.`;\r\n      } else {\r\n        return \"Nenhum repositório encontrado.\";\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let variables = {\r\n      login: \"rodolfoafl\",\r\n      results: orderMaxResults,\r\n      orderField: sortMethod.split(\"-\")[0],\r\n      orderDirection: sortMethod.split(\"-\")[1],\r\n    };\r\n\r\n    orderRepos({ variables: variables });\r\n  }, [orderMaxResults, sortMethod, orderRepos]);\r\n\r\n  useEffect(() => {\r\n    let variables = {\r\n      query: setQueryParameters(),\r\n      number_of_repos: maxResults,\r\n    };\r\n\r\n    filterRepos({ variables: variables });\r\n  }, [maxResults, filterRepos]);\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <form className=\"bg-secondary text-light p-3\" id=\"searchForm\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"repoName\">Buscar por nome do repositório</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"repoName\"\r\n                placeholder=\"Repositório\"\r\n                name=\"repoName\"\r\n                value={repoName}\r\n                onChange={(e) => setRepoName(e.target.value)}\r\n              />\r\n            </div>\r\n            {/* <div className=\"form-group\">\r\n              <label htmlFor=\"userName\">Buscar por nome do usuário</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"userName\"\r\n                placeholder=\"Usuário\"\r\n                name=\"userName\"\r\n                value={userName}\r\n                onChange={(e) => setUserName(e.target.value)}\r\n              />\r\n            </div> */}\r\n            <div className=\"form-group\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label htmlFor=\"maxResults\" className=\"col-md-12\">\r\n                    Número de resultados:\r\n                  </label>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <select\r\n                    className=\"custom-select col-md-12\"\r\n                    id=\"maxResults\"\r\n                    name=\"maxResults\"\r\n                    onChange={(e) => setMaxResults(Number(e.target.value))}\r\n                    value={maxResults}\r\n                  >\r\n                    <option defaultValue=\"\" disabled>\r\n                      Selecione o número de resultados\r\n                    </option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"20\">20</option>\r\n                    <option value=\"50\">50</option>\r\n                    <option value=\"100\">100</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\" id=\"separator\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label className=\"col-md-12\">Opções de filtro: </label>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <label className=\"form-check-label col-md-12\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"private\"\r\n                      checked={isPrivate}\r\n                      onChange={(e) => setIsPrivate(e.target.checked)}\r\n                    />\r\n                    Privado\r\n                  </label>\r\n                  <label className=\"form-check-label col-md-12\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"archived\"\r\n                      checked={isArchived}\r\n                      onChange={(e) => setIsArchived(e.target.checked)}\r\n                    />\r\n                    Arquivado\r\n                  </label>\r\n                  <div className=\"row mt-2\">\r\n                    <div className=\"col-md-12 mb-2\">\r\n                      <small>Linguagem Principal:</small>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <label className=\"form-check-label col-md-12\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"optionsRadios\"\r\n                          id=\"optionsRadios1\"\r\n                          value=\"c\"\r\n                          checked={language === \"c\"}\r\n                          onChange={(e) => setLanguage(e.target.value)}\r\n                        />\r\n                        C\r\n                      </label>\r\n                      <label className=\"form-check-label col-md-12\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"optionsRadios\"\r\n                          id=\"optionsRadios2\"\r\n                          value=\"c#\"\r\n                          checked={language === \"c#\"}\r\n                          onChange={(e) => setLanguage(e.target.value)}\r\n                        />\r\n                        C#\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <label className=\"form-check-label col-md-12\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"optionsRadios\"\r\n                          id=\"optionsRadios3\"\r\n                          value=\"javascript\"\r\n                          checked={language === \"javascript\"}\r\n                          onChange={(e) => setLanguage(e.target.value)}\r\n                        />\r\n                        JavaScript\r\n                      </label>\r\n                      <label className=\"form-check-label col-md-12\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"optionsRadios\"\r\n                          id=\"optionsRadios4\"\r\n                          value=\"php\"\r\n                          checked={language === \"php\"}\r\n                          onChange={(e) => setLanguage(e.target.value)}\r\n                        />\r\n                        PHP\r\n                      </label>\r\n                      <label className=\"form-check-label col-md-12\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"optionsRadios\"\r\n                          id=\"optionsRadios5\"\r\n                          value=\"\"\r\n                          checked={language === \"\"}\r\n                          onChange={(e) => setLanguage(e.target.value)}\r\n                        />\r\n                        Qualquer\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block mt-2\"\r\n                onClick={(e) => handleSearchSubmit(e)}\r\n              >\r\n                Buscar\r\n              </button>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label htmlFor=\"orderMaxResults\" className=\"col-md-12\">\r\n                    Número de resultados:\r\n                  </label>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <select\r\n                    className=\"custom-select col-md-12\"\r\n                    id=\"orderMaxResults\"\r\n                    name=\"orderMaxResults\"\r\n                    onChange={(e) => setOrderMaxResults(Number(e.target.value))}\r\n                    value={orderMaxResults}\r\n                  >\r\n                    <option defaultValue=\"\" disabled>\r\n                      Selecione o número de resultados\r\n                    </option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"20\">20</option>\r\n                    <option value=\"50\">50</option>\r\n                    <option value=\"100\">100</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label htmlFor=\"sortMethod\" className=\"col-md-12\">\r\n                    Método de ordenação:\r\n                  </label>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <label className=\"form-check-label col-md-12\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"form-check-input\"\r\n                      name=\"sortMethodOptions\"\r\n                      id=\"sortMethodOptions1\"\r\n                      value=\"NAME-ASC\"\r\n                      checked={sortMethod === \"NAME-ASC\"}\r\n                      onChange={(e) => setSortMethod(e.target.value)}\r\n                    />\r\n                    Alfabeticamente (A-Z)\r\n                  </label>\r\n                  <label className=\"form-check-label col-md-12\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"form-check-input\"\r\n                      name=\"sortMethodOptions\"\r\n                      id=\"sortMethodOptions3\"\r\n                      value=\"NAME-DESC\"\r\n                      checked={sortMethod === \"NAME-DESC\"}\r\n                      onChange={(e) => setSortMethod(e.target.value)}\r\n                    />\r\n                    Alfabeticamente (Z-A)\r\n                  </label>\r\n                  <label className=\"form-check-label col-md-12\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"form-check-input\"\r\n                      name=\"sortMethodOptions\"\r\n                      id=\"sortMethodOptions2\"\r\n                      value=\"PUSHED_AT-ASC\"\r\n                      checked={sortMethod === \"PUSHED_AT-ASC\"}\r\n                      onChange={(e) => setSortMethod(e.target.value)}\r\n                    />\r\n                    Atualização (Push) - Mais Antigo\r\n                  </label>\r\n                  <label className=\"form-check-label col-md-12\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"form-check-input\"\r\n                      name=\"sortMethodOptions\"\r\n                      id=\"sortMethodOptions4\"\r\n                      value=\"PUSHED_AT-DESC\"\r\n                      checked={sortMethod === \"PUSHED_AT-DESC\"}\r\n                      onChange={(e) => setSortMethod(e.target.value)}\r\n                    />\r\n                    Atualização (Push) - Mais Recente\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block\"\r\n              onClick={(e) => handleSortSubmit(e)}\r\n            >\r\n              Ordenar\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"col\">\r\n          {isOrder ? (\r\n            <>\r\n              {orderLoading ? (\r\n                <p>Loading...</p>\r\n              ) : (\r\n                <h4>{`Mostrando ${orderMaxResults}.`}</h4>\r\n              )}\r\n              {orderError && <p>Error: {orderError.message}</p>}\r\n              {orderData &&\r\n                orderData.repositoryOwner.repositories.edges.map((repo) => (\r\n                  <RepoItem key={repo.node.id} repo={repo.node} />\r\n                ))}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {loading ? <p>Loading...</p> : <h4>{setResultText(data)}</h4>}\r\n              {error && <p>Error: {error.message}</p>}\r\n              {data &&\r\n                data.search.edges.map((repo) => (\r\n                  <RepoItem key={repo.node.id} repo={repo.node} />\r\n                ))}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Repos;\r\n","import React from \"react\";\nimport Repos from \"./components/Repos\";\n\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  headers: {\n    Authorization: \"Bearer 0e520615187fbf3b5d1a967cbc22f8794916fb8b\",\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n  cache: new InMemoryCache(),\n});\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"container mt-2\">\n        <h1 className=\"text-center\">GraphQL GitHub API</h1>\n        <Repos />\n      </div>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}