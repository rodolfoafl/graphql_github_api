[{"C:\\Users\\Rodol\\Documents\\git\\graphql_github_api\\src\\index.js":"1","C:\\Users\\Rodol\\Documents\\git\\graphql_github_api\\src\\App.js":"2","C:\\Users\\Rodol\\Documents\\git\\graphql_github_api\\src\\components\\Repos.js":"3","C:\\Users\\Rodol\\Documents\\git\\graphql_github_api\\src\\components\\RepoItem.js":"4","C:\\Users\\Rodol\\Documents\\git\\graphql_github_api\\src\\queries\\graphql.js":"5"},{"size":265,"mtime":1611168658692,"results":"6","hashOfConfig":"7"},{"size":659,"mtime":1611168658691,"results":"8","hashOfConfig":"7"},{"size":14735,"mtime":1611163570605,"results":"9","hashOfConfig":"7"},{"size":1281,"mtime":1611096659130,"results":"10","hashOfConfig":"7"},{"size":1419,"mtime":1611159102443,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xckk6d",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\Rodol\\Documents\\git\\graphql_github_api\\src\\index.js",[],"C:\\Users\\Rodol\\Documents\\git\\graphql_github_api\\src\\App.js",[],"C:\\Users\\Rodol\\Documents\\git\\graphql_github_api\\src\\components\\Repos.js",["24"],"import React, { useState, useEffect } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport RepoItem from \"./RepoItem\";\r\n\r\nimport { FILTER_USER_REPOS, ORDER_USER_REPOS } from \"../queries/graphql\";\r\n\r\nconst Repos = () => {\r\n  const [filterRepos, { loading, error, data }] = useLazyQuery(\r\n    FILTER_USER_REPOS\r\n  );\r\n  const [\r\n    orderRepos,\r\n    { loading: orderLoading, error: orderError, data: orderData },\r\n  ] = useLazyQuery(ORDER_USER_REPOS);\r\n\r\n  const [repoName, setRepoName] = useState(\"\");\r\n  // const [userName, setUserName] = useState(\"\");\r\n  const [maxResults, setMaxResults] = useState(5);\r\n  const [orderMaxResults, setOrderMaxResults] = useState(5);\r\n  const [language, setLanguage] = useState(\"\");\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const [isArchived, setIsArchived] = useState(false);\r\n  const [sortMethod, setSortMethod] = useState(\"NAME-ASC\");\r\n  const [isOrder, setIsOrder] = useState(false);\r\n\r\n  const setQueryParameters = () => {\r\n    let query = \"user:rodolfoafl \";\r\n\r\n    // if (userName !== \"\") {\r\n    //   query += `user:${userName} `;\r\n    // }\r\n    if (repoName !== \"\") {\r\n      query += `in:name ${repoName} `;\r\n    }\r\n    if (isPrivate) {\r\n      query += `is:private `;\r\n    }\r\n    if (isArchived) {\r\n      query += `archived:${isArchived} `;\r\n    }\r\n    if (language !== \"\") {\r\n      query += `language:${language} `;\r\n    }\r\n\r\n    return query;\r\n  };\r\n\r\n  const handleSearchSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsOrder(false);\r\n\r\n    let variables = {\r\n      query: setQueryParameters(),\r\n      number_of_repos: maxResults,\r\n    };\r\n\r\n    filterRepos({ variables: variables });\r\n  };\r\n\r\n  const handleSortSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsOrder(true);\r\n\r\n    let variables = {\r\n      login: \"rodolfoafl\",\r\n      results: orderMaxResults,\r\n      orderField: sortMethod.split(\"-\")[0],\r\n      orderDirection: sortMethod.split(\"-\")[1],\r\n    };\r\n\r\n    orderRepos({ variables: variables });\r\n  };\r\n\r\n  const setResultText = (data) => {\r\n    let count = 0;\r\n    if (data) {\r\n      if (data.search !== undefined) {\r\n        count = data.search.repositoryCount;\r\n      }\r\n      if (count > 0) {\r\n        let from = count;\r\n        let current;\r\n        if (maxResults >= count) {\r\n          current = count;\r\n        } else {\r\n          current = maxResults;\r\n        }\r\n\r\n        return `Mostrando ${current} de ${from}.`;\r\n      } else {\r\n        return \"Nenhum repositório encontrado.\";\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let variables = {\r\n      login: \"rodolfoafl\",\r\n      results: orderMaxResults,\r\n      orderField: sortMethod.split(\"-\")[0],\r\n      orderDirection: sortMethod.split(\"-\")[1],\r\n    };\r\n\r\n    orderRepos({ variables: variables });\r\n  }, [orderMaxResults, sortMethod, orderRepos]);\r\n\r\n  useEffect(() => {\r\n    let variables = {\r\n      query: setQueryParameters(),\r\n      number_of_repos: maxResults,\r\n    };\r\n\r\n    filterRepos({ variables: variables });\r\n  }, [maxResults, filterRepos]);\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <form className=\"bg-secondary text-light p-3\" id=\"searchForm\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"repoName\">Buscar por nome do repositório</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"repoName\"\r\n                placeholder=\"Repositório\"\r\n                name=\"repoName\"\r\n                value={repoName}\r\n                onChange={(e) => setRepoName(e.target.value)}\r\n              />\r\n            </div>\r\n            {/* <div className=\"form-group\">\r\n              <label htmlFor=\"userName\">Buscar por nome do usuário</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"userName\"\r\n                placeholder=\"Usuário\"\r\n                name=\"userName\"\r\n                value={userName}\r\n                onChange={(e) => setUserName(e.target.value)}\r\n              />\r\n            </div> */}\r\n            <div className=\"form-group\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label htmlFor=\"maxResults\" className=\"col-md-12\">\r\n                    Número de resultados:\r\n                  </label>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <select\r\n                    className=\"custom-select col-md-12\"\r\n                    id=\"maxResults\"\r\n                    name=\"maxResults\"\r\n                    onChange={(e) => setMaxResults(Number(e.target.value))}\r\n                    value={maxResults}\r\n                  >\r\n                    <option defaultValue=\"\" disabled>\r\n                      Selecione o número de resultados\r\n                    </option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"20\">20</option>\r\n                    <option value=\"50\">50</option>\r\n                    <option value=\"100\">100</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\" id=\"separator\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label className=\"col-md-12\">Opções de filtro: </label>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <label className=\"form-check-label col-md-12\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"private\"\r\n                      checked={isPrivate}\r\n                      onChange={(e) => setIsPrivate(e.target.checked)}\r\n                    />\r\n                    Privado\r\n                  </label>\r\n                  <label className=\"form-check-label col-md-12\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"archived\"\r\n                      checked={isArchived}\r\n                      onChange={(e) => setIsArchived(e.target.checked)}\r\n                    />\r\n                    Arquivado\r\n                  </label>\r\n                  <div className=\"row mt-2\">\r\n                    <div className=\"col-md-12 mb-2\">\r\n                      <small>Linguagem Principal:</small>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <label className=\"form-check-label col-md-12\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"optionsRadios\"\r\n                          id=\"optionsRadios1\"\r\n                          value=\"c\"\r\n                          checked={language === \"c\"}\r\n                          onChange={(e) => setLanguage(e.target.value)}\r\n                        />\r\n                        C\r\n                      </label>\r\n                      <label className=\"form-check-label col-md-12\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"optionsRadios\"\r\n                          id=\"optionsRadios2\"\r\n                          value=\"c#\"\r\n                          checked={language === \"c#\"}\r\n                          onChange={(e) => setLanguage(e.target.value)}\r\n                        />\r\n                        C#\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <label className=\"form-check-label col-md-12\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"optionsRadios\"\r\n                          id=\"optionsRadios3\"\r\n                          value=\"javascript\"\r\n                          checked={language === \"javascript\"}\r\n                          onChange={(e) => setLanguage(e.target.value)}\r\n                        />\r\n                        JavaScript\r\n                      </label>\r\n                      <label className=\"form-check-label col-md-12\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"optionsRadios\"\r\n                          id=\"optionsRadios4\"\r\n                          value=\"php\"\r\n                          checked={language === \"php\"}\r\n                          onChange={(e) => setLanguage(e.target.value)}\r\n                        />\r\n                        PHP\r\n                      </label>\r\n                      <label className=\"form-check-label col-md-12\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"optionsRadios\"\r\n                          id=\"optionsRadios5\"\r\n                          value=\"\"\r\n                          checked={language === \"\"}\r\n                          onChange={(e) => setLanguage(e.target.value)}\r\n                        />\r\n                        Qualquer\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block mt-2\"\r\n                onClick={(e) => handleSearchSubmit(e)}\r\n              >\r\n                Buscar\r\n              </button>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label htmlFor=\"orderMaxResults\" className=\"col-md-12\">\r\n                    Número de resultados:\r\n                  </label>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <select\r\n                    className=\"custom-select col-md-12\"\r\n                    id=\"orderMaxResults\"\r\n                    name=\"orderMaxResults\"\r\n                    onChange={(e) => setOrderMaxResults(Number(e.target.value))}\r\n                    value={orderMaxResults}\r\n                  >\r\n                    <option defaultValue=\"\" disabled>\r\n                      Selecione o número de resultados\r\n                    </option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"20\">20</option>\r\n                    <option value=\"50\">50</option>\r\n                    <option value=\"100\">100</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label htmlFor=\"sortMethod\" className=\"col-md-12\">\r\n                    Método de ordenação:\r\n                  </label>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <label className=\"form-check-label col-md-12\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"form-check-input\"\r\n                      name=\"sortMethodOptions\"\r\n                      id=\"sortMethodOptions1\"\r\n                      value=\"NAME-ASC\"\r\n                      checked={sortMethod === \"NAME-ASC\"}\r\n                      onChange={(e) => setSortMethod(e.target.value)}\r\n                    />\r\n                    Alfabeticamente (A-Z)\r\n                  </label>\r\n                  <label className=\"form-check-label col-md-12\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"form-check-input\"\r\n                      name=\"sortMethodOptions\"\r\n                      id=\"sortMethodOptions3\"\r\n                      value=\"NAME-DESC\"\r\n                      checked={sortMethod === \"NAME-DESC\"}\r\n                      onChange={(e) => setSortMethod(e.target.value)}\r\n                    />\r\n                    Alfabeticamente (Z-A)\r\n                  </label>\r\n                  <label className=\"form-check-label col-md-12\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"form-check-input\"\r\n                      name=\"sortMethodOptions\"\r\n                      id=\"sortMethodOptions2\"\r\n                      value=\"PUSHED_AT-ASC\"\r\n                      checked={sortMethod === \"PUSHED_AT-ASC\"}\r\n                      onChange={(e) => setSortMethod(e.target.value)}\r\n                    />\r\n                    Atualização (Push) - Mais Antigo\r\n                  </label>\r\n                  <label className=\"form-check-label col-md-12\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"form-check-input\"\r\n                      name=\"sortMethodOptions\"\r\n                      id=\"sortMethodOptions4\"\r\n                      value=\"PUSHED_AT-DESC\"\r\n                      checked={sortMethod === \"PUSHED_AT-DESC\"}\r\n                      onChange={(e) => setSortMethod(e.target.value)}\r\n                    />\r\n                    Atualização (Push) - Mais Recente\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block\"\r\n              onClick={(e) => handleSortSubmit(e)}\r\n            >\r\n              Ordenar\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"col\">\r\n          {isOrder ? (\r\n            <>\r\n              {orderLoading ? (\r\n                <p>Loading...</p>\r\n              ) : (\r\n                <h4>{`Mostrando ${orderMaxResults}.`}</h4>\r\n              )}\r\n              {orderError && <p>Error: {orderError.message}</p>}\r\n              {orderData &&\r\n                orderData.repositoryOwner.repositories.edges.map((repo) => (\r\n                  <RepoItem key={repo.node.id} repo={repo.node} />\r\n                ))}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {loading ? <p>Loading...</p> : <h4>{setResultText(data)}</h4>}\r\n              {error && <p>Error: {error.message}</p>}\r\n              {data &&\r\n                data.search.edges.map((repo) => (\r\n                  <RepoItem key={repo.node.id} repo={repo.node} />\r\n                ))}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Repos;\r\n",["25","26"],"C:\\Users\\Rodol\\Documents\\git\\graphql_github_api\\src\\components\\RepoItem.js",[],"C:\\Users\\Rodol\\Documents\\git\\graphql_github_api\\src\\queries\\graphql.js",[],{"ruleId":"27","severity":1,"message":"28","line":114,"column":6,"nodeType":"29","endLine":114,"endColumn":31,"suggestions":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setQueryParameters'. Either include it or remove the dependency array.","ArrayExpression",["35"],"no-native-reassign",["36"],"no-negated-in-lhs",["37"],{"desc":"38","fix":"39"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [maxResults, filterRepos, setQueryParameters]",{"range":"40","text":"41"},[2992,3017],"[maxResults, filterRepos, setQueryParameters]"]